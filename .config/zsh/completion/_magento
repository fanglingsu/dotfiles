#compdef magento

# unfunction _magento && autoload -U _magento
_magento() {
    local curcontext=$curcontext state line
    typeset -A opt_args
    local ret=1
    _arguments -C \
        '--xml[To output help as XML]'\
        '--format[To output help in other formats (default: "txt")]'\
        '--raw[To output raw command help]'\
        '(-h --help)'{-h,--help}'[Display this help message]'\
        '(-q --quiet)'{-q,--quiet}'[Do not autput any message]' \
        '(-v|vv|vvv --verbose)'{-v\|vv\|vvv,--verbose}'[Increase the verbosity of messages]'\
        '(-V --version)'{-V,--version}'[Display this application version]' \
        '--ansi[Force ANSI output]'\
        '--no-ansi[Disable ANSI output]'\
        '(-n --no-interaction)'{-n,--no-interaction}'[Do not ask any interactive question]'\
        ': :->cmds' \
        '*:: :->option-or-argument' \
        && return
    case $state in
    (cmds)
        local -a commands
        # php bin/magento --raw --no-ansi list | sed 's/:/\\:/g;s/[[:space:]]\+/:/;s/\(.*\)/"\1"/'
        commands=(
            "help:Displays help for a command"
            "list:Lsits commands"
            "admin\:user\:create:Creates an administrator"
            "admin\:user\:unlock:Unlock Admin Account"
            "app\:config\:dump:Create dump of application"
            "cache\:clean:Cleans cache type(s)"
            "cache\:disable:Disables cache type(s)"
            "cache\:enable:Enables cache type(s)"
            "cache\:flush:Flushes cache storage used by cache type(s)"
            "cache\:status:Checks cache status"
            "catalog\:images\:resize:Creates resized product images"
            "catalog\:product\:attributes\:cleanup:Removes unused product attributes."
            "cron\:run:Runs jobs by schedule"
            "customer\:hash\:upgrade:Upgrade customer's hash according to the latest algorithm"
            "deploy\:mode\:set:Set application mode."
            "deploy\:mode\:show:Displays current application mode."
            "dev\:source-theme\:deploy:Collects and publishes source files for theme."
            "dev\:tests\:run:Runs tests"
            "dev\:urn-catalog\:generate:Generates the catalog of URNs to *.xsd mappings for the IDE to highlight xml."
            "dev\:xml\:convert:Converts XML file using XSL style sheets"
            "i18n\:collect-phrases:Discovers phrases in the codebase"
            "i18n\:pack:Saves language package"
            "i18n\:uninstall:Uninstalls language packages"
            "indexer\:info:Shows allowed Indexers"
            "indexer\:reindex:Reindexes Data"
            "indexer\:reset:Resets indexer status to invalid"
            "indexer\:set-mode:Sets index mode type"
            "indexer\:show-mode:Shows Index Mode"
            "indexer\:status:Shows status of Indexer"
            "info\:adminuri:Displays the Magento Admin URI"
            "info\:backups\:list:Prints list of available backup files"
            "info\:currency\:list:Displays the list of available currencies"
            "info\:dependencies\:show-framework:Shows number of dependencies on Magento framework"
            "info\:dependencies\:show-modules:Shows number of dependencies between modules"
            "info\:dependencies\:show-modules-circular:Shows number of circular dependencies between modules"
            "info\:language\:list:Displays the list of available language locales"
            "info\:timezone\:list:Displays the list of available timezones"
            "maintenance\:allow-ips:Sets maintenance mode exempt IPs"
            "maintenance\:disable:Disables maintenance mode"
            "maintenance\:enable:Enables maintenance mode"
            "maintenance\:status:Displays maintenance mode status"
            "module\:disable:Disables specified modules"
            "module\:enable:Enables specified modules"
            "module\:status:Displays status of modules"
            "module\:uninstall:Uninstalls modules installed by composer"
            "sampledata\:deploy:Deploy sample data modules"
            "sampledata\:remove:Remove all sample data packages from composer.json"
            "sampledata\:reset:Reset all sample data modules for re-installation"
            "setup\:backup:Takes backup of Magento Application code base, media and database"
            "setup\:config\:set:Creates or modifies the deployment configuration"
            "setup\:cron\:run:Runs cron job scheduled for setup application"
            "setup\:db-data\:upgrade:Installs and upgrades data in the DB"
            "setup\:db-schema\:upgrade:Installs and upgrades the DB schema"
            "setup\:db\:status:Checks if DB schema or data requires upgrade"
            "setup\:di\:compile:Generates DI configuration and all missing classes that can be auto-generated"
            "setup\:install:Installs the Magento application"
            "setup\:performance\:generate-fixtures:Generates fixtures"
            "setup\:rollback:Rolls back Magento Application codebase, media and database"
            "setup\:static-content\:deploy:Deploys static view files"
            "setup\:store-config\:set:Installs the store configuration"
            "setup\:uninstall:Uninstalls the Magento application"
            "setup\:upgrade:Upgrades the Magento application, DB data, and schema"
            "theme\:uninstall:Uninstalls theme"
        )
        _describe -t commands 'command' commands && ret=0
        ;;
    (option-or-argument)
        curcontext=${curcontext%:*}-$line[1]:
        case $line[1] in
        (help)
            _arguments -w -S -s \
                ':command' \
                && ret=0
            ;;
        (list)
            _arguments -w -S -s \
               '--xml[To output list as XML]'\
               '--raw[To output raw command list]'\
               '--format[To output list in other formats]'\
               && ret=0
            ;;
        esac
    ;;
    esac

    return ret
}

compdef _magento bin/magento
# vim: set et sw=4
