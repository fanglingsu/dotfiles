#!/usr/bin/env bash
# extracts time data from stdin. 0.5d 2h 10m
DAYHOURS=8
TAG=""
PATTERN='([[:digit:]]*\.)?[[:digit:]]+[dhm]'

source functions.sh

# show the usage and help message
show_help() {
    cat >&2 << EOM
USAGE:   $(basename $0) [OPTIONS]
OPTIONS:

   -d HOURS Set the hours per day (for example 8 to cover a person day)
            Default is 8,
   -h       Show this help
   -t       Set a tag/word to select specific prefixed times.
            E.g. use -t 'foo' to match times like '...foo 2.5d'
EOM
}

# process options to configure global settings
while getopts "d:ht:?" Option; do
    case $Option in
        d )  DAYHOURS=$OPTARG ;;
        h )  die "$(show_help)" 2 ;;
        t )  TAG=$OPTARG ;;
        \? ) die "$(show_help)" 2 ;;
    esac
done

extracttime() {
    grep -oE "$PATTERN" \
        | awk -v dayhours="$DAYHOURS" '
    BEGIN{
        m = 0;
        mperhour = 60;
        mperday = dayhours * mperhour;
    }
    /m$/{
        m += $1;
    }
    /h$/{
        m += (mperhour * $1)
    }
    /d$/{
        m += (mperday * $1)
    }
    END{
        v = int(m/mperday);
        if (m/mperday >= 1) {
            printf "%dd ", v;
        }
        printf "%.2fh ", (m % mperday) / mperhour;
    }'
}

# prepend tag and space pattern to the global time pattern.
prefilter() {
    local pattern="$1[[:space:]]*$PATTERN"
    grep -oE "$pattern"
}

if [[ ! -z $TAG ]]; then
    prefilter "$TAG" | extracttime
else
    extracttime
fi
